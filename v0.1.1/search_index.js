var documenterSearchIndex = {"docs":
[{"location":"#FileType.jl","page":"FileType.jl","title":"FileType.jl","text":"","category":"section"},{"location":"","page":"FileType.jl","title":"FileType.jl","text":"Documentation for FileTypes.jl","category":"page"},{"location":"#Documentation","page":"FileType.jl","title":"Documentation","text":"","category":"section"},{"location":"#FileTypes.Is-Tuple{Any, String}","page":"FileType.jl","title":"FileTypes.Is","text":"API to check if it is of given type or not.\nArgs:\n    FileType.FileTypes (object)  \n    filename (String) i.e filepath \nReturns:\n    true if the filetype matches with the given object else flase\n\n\n\n\n\n","category":"method"},{"location":"#FileTypes.is_extension_supported-Tuple{String}","page":"FileType.jl","title":"FileTypes.is_extension_supported","text":"Checks if the given extension string is\none of the supported by the library.\nArgs:\n    ext (String): file extension string. E.g: jpg, png, mp4, mp3\nReturns:\n    true if the file extension is supported.\n    Otherwise false.\n\n\n\n\n\n","category":"method"},{"location":"#FileTypes.matcher-Tuple{String}","page":"FileType.jl","title":"FileTypes.matcher","text":"API to return FileType.Type object which has files as extension of the file and MIME of the file\nArgs:\n    filename (String) i.e filepath \nReturns:\n    FileType.Type object or nothing if the file is not recognized\n\n\n\n\n\n","category":"method"}]
}
